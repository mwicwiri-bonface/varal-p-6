# Generated by Django 3.2.4 on 2021-06-10 07:03

import autoslug.fields
import django.contrib.auth.models
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='email')),
                ('username', models.CharField(max_length=100, unique=True)),
                ('is_staff', models.BooleanField(default=False, help_text='Used for super user authentications')),
                ('is_superuser', models.BooleanField(default=False, help_text='Means user is admin')),
                ('is_mto', models.BooleanField(default=False, help_text="Means user can login to dean's portal")),
                ('is_active', models.BooleanField(default=True, help_text='Means user can login to the system')),
                ('is_archived', models.BooleanField(default=False, help_text='Means User cannot login')),
                ('is_verified', models.BooleanField(default=False, help_text='Means email is valid')),
                ('is_approved', models.BooleanField(default=False, help_text='Means that user has been approved')),
                ('updated', models.DateTimeField(auto_now=True, help_text='means last time table instance was edited', null=True, verbose_name='Updated')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='time table instance was created', null=True, verbose_name='Created')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
